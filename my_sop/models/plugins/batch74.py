import sys
import time
import ujson
import datetime
from os.path import abspath, join, dirname
sys.path.insert(0, join(abspath(dirname(__file__)), '../../'))
# sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf8')

import models.plugins.batch as Batch
import application as app

class main(Batch.main):
    def b(self):
        db18 = self.cleaner.get_db('18_apollo')
        sql = '''
            SELECT a.source, tb_item_id, p1, slipt_id, IF(b.alias_bid>0,b.alias_bid,b.bid), a.name, a.num
            FROM artificial_new.entity_90005_manclean a JOIN all_site.all_brand b ON (a.alias_all_bid = b.bid)
        '''
        ret = db18.query_all(sql)
        sps = {'{}-{}-{}-{}'.format(v[0],v[1],v[2].replace(' ',''),v[3]):v[4:] for v in ret}

        db26 = self.cleaner.get_db('26_apollo')
        sql = 'SELECT pid, alias_all_bid, name FROM product_lib.product_90608'
        ret = db26.query_all(sql)
        pps = {'{}/{}'.format(v[1], v[2]):v[0] for v in ret}

        sql = 'SELECT id, spid1, tb_item_id, source, p1, month, tip FROM product_lib_hw.entity_90608_item'
        ret = db26.query_all(sql)
        for id, sp1, tb_item_id, source, p1, month, tip, in ret:
            # source, itemid, p1, splitid
            sp1 = sp1.split(' ')
            sp1, sids, op1 = sp1[0], sp1[1], ''.join(sp1[2:])
            sids = sids.split(',')
            for i in sids:
                if i == '0':
                    continue
                v = sps['{}-{}-{}-{}'.format(source, tb_item_id, op1, i)]
                k = '{}/{}'.format(v[0],v[1])
                num = v[2]
                pid = pps[k]
                if len(sids) == 1:
                    sql = 'UPDATE product_lib_hw.entity_90608_item SET number = {}, pid = {} WHERE id = {}'.format(num, pid, id)
                    db26.execute(sql)
                else:
                    sql = 'UPDATE product_lib_hw.entity_90608_item SET split = 1 WHERE id = {}'.format(id)
                    db26.execute(sql)

                    sql = 'INSERT INTO product_lib.entity_90608_item_split VALUES (%s,%s,%s,now(),%s,%s,%s,%s,%s)'
                    db26.execute(sql, (id, pid, num, tb_item_id, source, p1, month, tip,))
        exit()

    def brush(self, smonth, emonth, logId=-1):
        uuids = []
        cc = {}
        sales_by_uuid = {}
        # where = '''uuid2 in (select uuid2 from {} where sp1 = '造口袋' and (sp3 like '%|%' or (sp12 = '二件式套装' and sp3 not in ('1950','1960'))))'''.format(self.get_clean_tbl())
        # where = '''uuid2 in (select uuid2 from {} where sp1 = '造口袋' and sp3 like '%|%')'''.format(self.get_clean_tbl())
        where = '''uuid2 in (select uuid2 from {} where sp1 = '造口袋' and (sp3 like '%|%' or sp12 = '二件式套装'))'''.format(self.get_clean_tbl())
        dd = 0
        for ssmonth, eemonth in self.cleaner.each_month(smonth, emonth):

            c = 0
            ret, sales_by_uuid1 = self.cleaner.process_top_anew(ssmonth, eemonth, where=where)
            sales_by_uuid.update(sales_by_uuid1)
            for uuid2, source, tb_item_id, p1, cid, alias_all_bid in ret:
                if int(tb_item_id) == 546279350207 and int(p1) == 599023172:
                    dd = dd + 1
                if self.skip_brush(source, tb_item_id, p1, if_flag=False):
                    continue
                uuids.append(uuid2)
                c = c + 1
            cc[ssmonth] = c
        print(len(uuids))
        print('ddfad: {}'.format(dd))
        clean_flag = self.cleaner.last_clean_flag() + 1
        self.cleaner.add_brush(uuids,clean_flag, 1, visible=1, sales_by_uuid=sales_by_uuid)
        for i in cc:
            print(i, cc[i])
        return True

    def brush_0413(self, smonth, emonth, logId=-1):
        uuids = []
        where = 'tb_item_id in (\'520258732787\',\'633144963946\')'
        ret, sales_by_uuid = self.cleaner.process_top(smonth, emonth, where=where)
        for uuid2, source, tb_item_id, p1, alias_all_bid in ret:
            if self.skip_brush(source, tb_item_id, p1, if_flag=False):
                continue
            uuids.append(uuid2)
        clean_flag = self.cleaner.last_clean_flag() + 1
        self.cleaner.add_brush(uuids, clean_flag, 1, sales_by_uuid=sales_by_uuid)
        return True


    def calc_splitrate_new(self, item, data):
        if len(data) <= 1:
            return data

        pids = [str(v['pid']) for v in data]

        dbname, btbl = self.get_b_tbl()
        dba = self.cleaner.get_db(dbname)

        sql = '''
            SELECT pid, sum(sales) / sum(num*number) FROM {} WHERE pid IN ({}) AND split_rate = 1 AND similarity >= 2 GROUP BY pid
        '''.format(btbl, ','.join(pids))
        ret = dba.query_all(sql)

        if len(ret) != len(pids):
            total = sum([v['number'] for v in data])
            less  = 1
            for v in data:
                split_rate = v['number'] / total
                less -= split_rate
                v['split_rate'] = split_rate
            data[-1]['split_rate'] += less
        else:
            ret = {v[0]: v[1] for v in ret}
            total = sum([ret[v['pid']]*v['number'] for v in data])
            less  = 1
            for v in data:
                split_rate = ret[v['pid']]*v['number'] / total
                less -= split_rate
                v['split_rate'] = split_rate
            data[-1]['split_rate'] += less

        return data


    def hotfix(self, tbl, dba, prefix, params):
        super().hotfix(tbl, dba, prefix, params)
        sql = '''
            ALTER TABLE {} UPDATE `c_props.value` = arrayMap((k, v) -> multiIf(
                k='辅助_人工型号（不含件数）' AND v='', `c_props.value`[indexOf(`c_props.name`, '型号')],
                k='辅助_人工型号（含件数）' AND v='', CONCAT(`c_props.value`[indexOf(`c_props.name`, '型号')], '(', `c_props.value`[indexOf(`c_props.name`, '包数')], ')'),
                k='全月装', '',
                k='是否套包', IF(c_split_rate = 1 , '单品', '套包'),
            v), c_props.name, c_props.value)
            WHERE 1
        '''.format(tbl)
        dba.execute(sql)

        while not self.cleaner.check_mutations_end(dba, tbl):
            time.sleep(5)

        sql = '''
            ALTER TABLE {} UPDATE `c_props.value` = arrayMap((k, v) -> IF(
                k='全月装', '全月装：特舒一件式开口袋', v
            ), c_props.name, c_props.value)
            WHERE `c_props.value`[indexOf(`c_props.name`, '辅助_人工型号（含件数）')] LIKE '%5985(30)%'
        '''.format(tbl)
        dba.execute(sql)

        while not self.cleaner.check_mutations_end(dba, tbl):
            time.sleep(5)

        for bid, model, in [[747,3346],[747,3343],[670951,6023]]:
            sql = '''
                SELECT toYYYYMM(date) m, sum(c_sales) FROM {}
                WHERE c_alias_all_bid = {} AND `c_props.value`[indexOf(`c_props.name`,'子品类')] = '造口袋'
                AND `c_props.value`[indexOf(`c_props.name`,'型号')] = '{}'
                GROUP BY m
            '''.format(tbl, bid, model)
            ret = dba.query_all(sql)
            for m, old_sales, in ret:
                sql = '''
                    ALTER TABLE {} UPDATE c_num = round(c_num*0.25), c_sales = IF(c_num<=0,0,c_sales/c_num)
                    WHERE c_alias_all_bid = {} AND `c_props.value`[indexOf(`c_props.name`,'子品类')] = '造口袋'
                    AND `c_props.value`[indexOf(`c_props.name`,'型号')] = '{}' AND toYYYYMM(date) = {}
                '''.format(tbl, bid, model, m)
                dba.execute(sql)

                while not self.cleaner.check_mutations_end(dba, tbl):
                    time.sleep(5)

                sql = '''
                    SELECT sum(c_sales*c_num) FROM {}
                    WHERE c_alias_all_bid = {} AND `c_props.value`[indexOf(`c_props.name`,'子品类')] = '造口袋'
                    AND `c_props.value`[indexOf(`c_props.name`,'型号')] = '{}' AND toYYYYMM(date) = {}
                '''.format(tbl, bid, model, m)
                rr1 = dba.query_all(sql)

                sql = '''
                    SELECT toString(uuid2), c_sales FROM {}
                    WHERE c_alias_all_bid = {} AND `c_props.value`[indexOf(`c_props.name`,'子品类')] = '造口袋'
                    AND `c_props.value`[indexOf(`c_props.name`,'型号')] = '{}' AND toYYYYMM(date) = {} AND c_sales > 0 AND c_num = 0
                    ORDER BY c_sales
                '''.format(tbl, bid, model, m)
                rr2 = dba.query_all(sql)

                # 调完差异大于5%才补
                data = {}
                if old_sales*0.25 > rr1[0][0]/1.05:
                    less = old_sales*0.25 - rr1[0][0]
                    cccc = True
                    while cccc:
                        for uuid2, price, in rr2:
                            less -= price
                            if uuid2 not in data:
                                data[uuid2] = 0
                            data[uuid2] += 1
                            if less <= 0:
                                cccc = False
                                break

                if len(data) > 0:
                    a, b = [], []
                    for uid in data:
                        a.append('\'{}\''.format(uid))
                        b.append(str(data[uid]))
                    sql = '''
                        ALTER TABLE {} UPDATE c_num = c_num + transform(toString(uuid2), [{}], [{}], 0)
                        WHERE c_alias_all_bid = {} AND `c_props.value`[indexOf(`c_props.name`,'子品类')] = '造口袋'
                        AND `c_props.value`[indexOf(`c_props.name`,'型号')] = '{}' AND toYYYYMM(date) = {}
                    '''.format(tbl, ','.join(a), ','.join(b), bid, model, m)
                    dba.execute(sql)

                    while not self.cleaner.check_mutations_end(dba, tbl):
                        time.sleep(5)

                sql = '''
                    ALTER TABLE {} UPDATE c_sales = c_sales*c_num
                    WHERE c_alias_all_bid = {} AND `c_props.value`[indexOf(`c_props.name`,'子品类')] = '造口袋'
                        AND `c_props.value`[indexOf(`c_props.name`,'型号')] = '{}' AND toYYYYMM(date) = {}
                '''.format(tbl, bid, model, m)
                dba.execute(sql)

                while not self.cleaner.check_mutations_end(dba, tbl):
                    time.sleep(5)


    def process_exx(self, tbl, prefix, logId=0):
        dba = self.cleaner.get_db('chsop')

        d = [
            ['造口袋','2833','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','特舒'],
            ['造口袋','1950','59342','B&P','清洗未识别','二件式','二件式套装','清洗未识别','闭口','安舒'],
            ['造口袋','1960','59342','B&P','肠道造口袋','二件式','二件式套装','清洗未识别','闭口','安舒'],
            ['造口袋','12030','59342','附件','附件','附件','防漏','不适用','不适用','Brava'],
            ['造口袋','1962','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','安舒'],
            ['造口袋','1961','59342','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','安舒'],
            ['造口袋','5985','59342','B&P','肠道造口袋','一件式','一件式','平面','开口','特舒'],
            ['造口袋','62041','59342','附件','附件','附件','护肤','不适用','不适用','Brava'],
            ['造口袋','12042','59342','附件','附件','附件','防漏','不适用','不适用','Brava'],
            ['造口袋','12021','59342','附件','附件','附件','护肤','不适用','不适用','Brava'],
            ['造口袋','12050','59342','附件','附件','附件','防漏','不适用','不适用','Brava'],
            ['造口袋','10035','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒'],
            ['造口袋','14249','59342','B&P','不适用','二件式','二件式底盘','凸面','不适用','特舒'],
            ['造口袋','12070','59342','附件','附件','附件','其它附件','不适用','不适用','Brava'],
            ['造口袋','10386','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','1698','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','特舒'],
            ['造口袋','1759','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','特舒'],
            ['造口袋','1952','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','安舒'],
            ['造口袋','1951','59342','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','安舒'],
            ['造口袋','15541','59342','B&P','肠道造口袋','一件式','一件式','平面','开口','胜舒'],
            ['造口袋','2832','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','特舒'],
            ['造口袋','2115','59342','B&P','肠道造口袋','一件式','一件式','平面','开口','特舒'],
            ['造口袋','1758','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','特舒'],
            ['造口袋','10387','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','14246','59342','B&P','不适用','二件式','二件式底盘','凸面','不适用','特舒'],
            ['造口袋','11035','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒'],
            ['造口袋','1697','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','特舒'],
            ['造口袋','11025','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒'],
            ['造口袋','1693','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','特舒'],
            ['造口袋','10031','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒'],
            ['造口袋','10385','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','1692','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','特舒'],
            ['造口袋','11856','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','14263','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','特舒'],
            ['造口袋','14262','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','特舒'],
            ['造口袋','15251','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','胜舒'],
            ['造口袋','14344','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','艺舒'],
            ['造口袋','10041','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒'],
            ['造口袋','1972','59342','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','特舒'],
            ['造口袋','11852','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','5585','59342','B&P','尿路造口袋','一件式','一件式','平面','开口','特舒'],
            ['造口袋','11804','59342','B&P','尿路造口袋','一件式','一件式','清洗未识别','开口','胜舒'],
            ['造口袋','16921','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒Mio'],
            ['造口袋','10025','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒'],
            ['造口袋','5885','59342','B&P','肠道造口袋','一件式','一件式','平面','开口','特舒'],
            ['造口袋','15202','59342','B&P','肠道造口袋','一件式','一件式','微凸','开口','胜舒'],
            ['造口袋','10021','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒'],
            ['造口袋','12020','59342','附件','附件','附件','护肤','不适用','不适用','Brava'],
            ['造口袋','0423','59342','附件','附件','附件','其它附件','不适用','不适用','Brava'],
            ['造口袋','15570','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','胜舒'],
            ['造口袋','11452','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','15061','59342','B&P','肠道造口袋','一件式','一件式','微凸','闭口','胜舒'],
            ['造口袋','10045','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒'],
            ['造口袋','14306','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','艺舒'],
            ['造口袋','1970','59342','附件','附件','附件','其它附件','不适用','不适用','Brava'],
            ['造口袋','5686','59342','B&P','肠道造口袋','一件式','一件式','平面','闭口','特舒'],
            ['造口袋','1683','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','特舒'],
            ['造口袋','11453','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','15020','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','胜舒'],
            ['造口袋','16415','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','胜舒Mio'],
            ['造口袋','12072','59342','附件','附件','附件','其它附件','不适用','不适用','Brava'],
            ['造口袋','10586','59342','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','胜舒Mio'],
            ['造口袋','2655','59342','附件','附件','附件','防漏','不适用','不适用','Brava'],
            ['造口袋','12010','59342','附件','附件','附件','祛胶','不适用','不适用','Brava'],
            ['造口袋','12011','59342','附件','附件','附件','祛胶','不适用','不适用','Brava'],
            ['造口袋','16971','59342','B&P','不适用','二件式','二件式底盘','凸面','不适用','胜舒Mio'],
            ['造口袋','10502','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','10512','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','10522','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','10531','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','16901','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒Mio'],
            ['造口袋','16911','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒Mio'],
            ['造口袋','16931','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒Mio'],
            ['造口袋','10551','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','10561','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','10571','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','胜舒Mio'],
            ['造口袋','16483','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒Mio'],
            ['造口袋','16491','59342','B&P','不适用','二件式','二件式底盘','微凸','不适用','胜舒Mio'],
            ['造口袋','14305','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','艺舒'],
            ['造口袋','1682','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','特舒'],
            ['造口袋','1687','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','特舒'],
            ['造口袋','1688','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','特舒'],
            ['造口袋','10366','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','1903','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','安舒'],
            ['造口袋','11492','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','清洗未识别','胜舒Mio'],
            ['造口袋','11498','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','清洗未识别','胜舒Mio'],
            ['造口袋','11456','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','11500','59342','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','11443','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','11425','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','胜舒Mio'],
            ['造口袋','11413','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','胜舒Mio'],
            ['造口袋','11422','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','胜舒Mio'],
            ['造口袋','12231','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','12242','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','12252','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','10365','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','10355','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒'],
            ['造口袋','10155','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','胜舒'],
            ['造口袋','10156','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','胜舒'],
            ['造口袋','14362','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','艺舒'],
            ['造口袋','14357','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','艺舒'],
            ['造口袋','16961','59342','B&P','不适用','二件式','二件式底盘','凸面','不适用','胜舒Mio'],
            ['造口袋','16951','59342','B&P','不适用','二件式','二件式底盘','凸面','不适用','胜舒Mio'],
            ['造口袋','11444','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','11433','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','KLB1907','59342','附件','附件','附件','护肤','不适用','不适用','Brava'],
            ['造口袋','11457','59342','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','胜舒Mio'],
            ['造口袋','1973','59342','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','特舒'],
            ['造口袋','1020','59342','B&P','尿路造口袋','一件式','一件式','清洗未识别','清洗未识别','其它B&P'],
            ['造口袋','11045','59342','B&P','不适用','二件式','二件式底盘','平面','不适用','其它B&P'],
            ['造口袋','411802','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','401576','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','413312','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','411804','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','125265','428505','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','413155','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','404593','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','413313','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','401544','428505','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','22771','428505','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','401507','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','401540','428505','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','404594','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','401508','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','404592','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','175792','428505','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','183910','428505','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','401545','428505','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','401541','428505','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','416420','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','416417','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','411801','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','411805','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','411803','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','125264','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','401513','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','413314','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','411800','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','175794','428505','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','401512','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','416419','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','401575','428505','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','25510','428505','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','416416','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','175796','428505','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','175795','428505','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','413504','428505','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','175793','428505','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','416718','428505','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','404010','428505','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','411266','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','401509','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','411806','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','401523','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','413156','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','413503','428505','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','20922','428505','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','411807','428505','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','404012','428505','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','401522','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','125266','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','413522','428505','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','421638','428505','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','416422','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','125263','428505','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','413521','428505','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','401506','428505','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','413502','428505','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','187955','428505','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','12103','469403','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','12601','469403','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','12133','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','15081','469403','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','12122','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','12121','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','12124','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','15591','469403','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','12611','469403','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','15592','469403','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','16771','469403','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','13383','469403','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','16653','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','12132','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','16601','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','12123','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','13395','469403','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','12581','469403','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','12671','469403','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','12093','469403','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','15601','469403','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','14431','469403','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','16644','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','14441','469403','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','12331','469403','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','16781','469403','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','12153','469403','B&P','尿路造口袋','二件式','二件式袋子','不适用','清洗未识别','NA'],
            ['造口袋','12582','469403','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','16622','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','16657','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','16661','469403','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','16621','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','12143','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','14221','469403','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','12126','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','16597','469403','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','12152','469403','B&P','尿路造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','12125','469403','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','12094','469403','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','12134','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','13642','469403','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','3346','747','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','3343','747','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','3380C','747','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','3382C','747','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','3344','747','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','8081','3943','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','7805','3943','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','7806','3943','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','14803','3943','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','14602','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','14202','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','14203','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','8331','3943','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','18402','3943','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18182','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18183','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18192','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','45604','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18194','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','14204','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','14604','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','45541','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','47541','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','14804','3943','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA'],
            ['造口袋','14603','3943','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','79300','3943','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','7906','3943','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','7300','3943','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','18403','3943','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18193','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','47604','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18184','3943','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','18404','3943','B&P','尿路造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','8460','3943','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','55510CN','50738','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','42815CN','50738','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','55410CN','50738','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','62060CN','50738','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','73460CN','50738','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','73060CN','50738','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','56510CN','50738','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','56410CN','50738','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','621260CN','50738','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','7280','528584','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','4280','528584','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','C20ll-450','528584','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','1182','528584','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','1180','528584','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','1181','528584','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','C10ll-500-C','528584','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','30536','528584','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','402F','528584','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','3180','528584','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','1280','528584','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','kf_01','528584','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','9416','528584','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','9616','528584','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','0313','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','50501','670951','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','111245','670951','B&P','尿路造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','5032','670951','附件','附件','附件','祛胶','不适用','不适用','NA'],
            ['造口袋','0232','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','0361','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','BHM-1','670951','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','2131','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','5033','670951','附件','附件','附件','祛胶','不适用','不适用','NA'],
            ['造口袋','2039057','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','2130045','670951','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','2030045','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','2221','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','2071','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','2041757-d','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','7002','670951','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','2041757-z','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','6032','670951','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','3044','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','3045','670951','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA'],
            ['造口袋','STL-02','670951','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','101050','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','2130','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','101125','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','4043','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','0264','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','101155','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','101060','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','112245','670951','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','2030057','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','steadlive_07','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','7012','670951','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','8051','670951','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','2139245','670951','B&P','尿路造口袋','二件式','二件式袋子','不适用','清洗未识别','NA'],
            ['造口袋','2255','670951','B&P','尿路造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','STL-03','670951','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','JG-O2','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','清洗未识别','NA'],
            ['造口袋','101085','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','2039045','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','1003','670951','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','2132','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','5008','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','0482','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','0149','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','8054','670951','附件','附件','附件','护肤','不适用','不适用','NA'],
            ['造口袋','9293','4058396','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','7306','4058396','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','7206','4058396','B&P','不适用','二件式','二件式底盘','平面','不适用','NA'],
            ['造口袋','hendry_02','4058396','B&P','尿路造口袋','二件式','二件式套装','清洗未识别','清洗未识别','NA'],
            ['造口袋','4306','4058396','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','6206','4058396','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','9201','4058396','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','9202','4058396','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','4201','4058396','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','4301','4058396','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','9506','4058396','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','1104','4058396','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','1103','4058396','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','6201','4058396','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','404C','4058396','附件','附件','附件','祛胶','不适用','不适用','NA'],
            ['造口袋','402A','4058396','附件','附件','附件','防漏','不适用','不适用','NA'],
            ['造口袋','5201','4058396','B&P','肠道造口袋','二件式','二件式袋子','不适用','闭口','NA'],
            ['造口袋','9301','4058396','附件','附件','附件','其它附件','不适用','不适用','NA'],
            ['造口袋','4207','4058396','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA'],
            ['造口袋','1195','5574886','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','1189','5574886','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','2650','59342','附件','附件','附件','防漏','不适用','不适用','Brava'],
            ['造口袋','1186','3312873','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','12351','469403','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','12511','469403','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA'],
            ['造口袋','101040','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','1123','5332294','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','10406c','5574886','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','4006V','366843','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA'],
            ['造口袋','7032','670951','附件','附件','附件','防漏','不适用','不适用','NA'],
        ]

        kk, b0, b1, b2, b3, b4, b5, b6, b7 = [], [], [], [], [], [], [], [], []
        for k1, k2, a0, a1, a2, a3, a4, a5, a6, a7, in d:
            kk.append('{}-{}'.format(k1, k2))
            b0.append(str(a0))
            b1.append(str(a1))
            b2.append(str(a2))
            b3.append(str(a3))
            b4.append(str(a4))
            b5.append(str(a5))
            b6.append(str(a6))
            b7.append(str(a7))

        sql = '''
            ALTER TABLE {} UPDATE `clean_props.value` = arrayMap((k,v)->(multiIf(
                k='分类1', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='分类2', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='分类3', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='分类4', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='平凸面', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='开闭口', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='产品线', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                v
            )), clean_props.name,clean_props.value),
            `alias_all_bid` = transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], `alias_all_bid`)
            WHERE 1
        '''.format(
            tbl,
            ','.join(['\'{}\''.format(v) for v in b1]), ','.join(['\'{}\''.format(v) for v in b2]),
            ','.join(['\'{}\''.format(v) for v in b3]), ','.join(['\'{}\''.format(v) for v in b4]),
            ','.join(['\'{}\''.format(v) for v in b5]), ','.join(['\'{}\''.format(v) for v in b6]),
            ','.join(['\'{}\''.format(v) for v in b7]), ','.join(b0),
            k=','.join(['\'{}\''.format(v) for v in kk])
        )
        dba.execute(sql)

        while not self.cleaner.check_mutations_end(dba, tbl):
            time.sleep(5)

        d = [
            ['造口袋','1902','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','安舒','1'],
            ['造口袋','1902','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','1902','5918956','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','1907','59342','附件','附件','附件','护肤','不适用','不适用','Brava','1'],
            ['造口袋','1907','3929901','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA','0'],
            ['造口袋','0845','670951','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA','1'],
            ['造口袋','0845','3785307','B&P','肠道造口袋','二件式','二件式袋子','不适用','开口','NA','0'],
            ['造口袋','0945','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA','1'],
            ['造口袋','0945','3785307','B&P','不适用','二件式','二件式底盘','平面','不适用','NA','0'],
            ['造口袋','1101','4058396','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','1101','5945770','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA','0'],
            ['造口袋','1101','5857491','B&P','肠道造口袋','一件式','一件式','微凸','开口','NA','0'],
            ['造口袋','1101','5918956','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','3023','670951','B&P','不适用','二件式','二件式底盘','微凸','不适用','NA','1'],
            ['造口袋','3023','3785307','B&P','不适用','二件式','二件式底盘','凸面','不适用','NA','0'],
            ['造口袋','6023','670951','附件','附件','附件','护肤','不适用','不适用','NA','1'],
            ['造口袋','6023','2290371','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','7201','4058396','B&P','不适用','二件式','二件式底盘','平面','不适用','NA','1'],
            ['造口袋','7201','5574886','B&P','肠道造口袋','二件式','二件式套装','清洗未识别','开口','NA','0'],
            ['造口袋','101055','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','101055','6313567','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','175507','428505','附件','附件','附件','其它附件','不适用','不适用','NA','1'],
            ['造口袋','175507','469403','附件','附件','附件','其它附件','不适用','不适用','NA','0'],
            ['造口袋','1911','59342','B&P','尿路造口袋','一件式','一件式','清洗未识别','开口','安舒','1'],
            ['造口袋','1911','3929901','B&P','尿路造口袋','一件式','一件式','平面','开口','NA','0'],
            ['造口袋','0283','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','0283','6410687','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','0314','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','0314','3785307','B&P','肠道造口袋','一件式','一件式','凸面','清洗未识别','NA','0'],
            ['造口袋','1102','4058396','B&P','尿路造口袋','二件式','二件式袋子','不适用','开口','NA','1'],
            ['造口袋','1102','5857491','B&P','肠道造口袋','一件式','一件式','凸面','开口','NA','0'],
            ['造口袋','1102','5574886','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','1105','4058396','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','1105','5574886','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','1106','4058396','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','1106','5332294','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','1201','4058396','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','1201','5918956','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','1912','59342','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','安舒','1'],
            ['造口袋','1912','670951','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','1912','3929901','B&P','尿路造口袋','一件式','一件式','平面','清洗未识别','NA','0'],
            ['造口袋','3043','670951','B&P','不适用','二件式','二件式底盘','平面','不适用','NA','1'],
            ['造口袋','3043','6410687','附件','附件','附件','防漏','不适用','不适用','NA','0'],
            ['造口袋','3101','4058396','B&P','尿路造口袋','一件式','一件式','清洗未识别','闭口','NA','1'],
            ['造口袋','3101','5574886','B&P','尿路造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','3101','2320884','B&P','尿路造口袋','一件式','一件式','清洗未识别','清洗未识别','NA','0'],
            ['造口袋','3201','4058396','B&P','尿路造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','3201','2320884','B&P','尿路造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','6012','670951','附件','附件','附件','护肤','不适用','不适用','NA','1'],
            ['造口袋','6012','2290371','附件','附件','附件','防漏','不适用','不适用','NA','0'],
            ['造口袋','6272','4058396','B&P','尿路造口袋','二件式','二件式套装','清洗未识别','清洗未识别','NA','1'],
            ['造口袋','6272','2320884','B&P','尿路造口袋','二件式','二件式套装','清洗未识别','清洗未识别','NA','0'],
            ['造口袋','7031','670951','附件','附件','附件','防漏','不适用','不适用','NA','1'],
            ['造口袋','7031','3785307','附件','附件','附件','防漏','不适用','不适用','NA','0'],
            ['造口袋','7301','4058396','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA','1'],
            ['造口袋','7301','5574886','B&P','不适用','二件式','二件式底盘','清洗未识别','不适用','NA','0'],
            ['造口袋','9401','4058396','附件','附件','附件','护肤','不适用','不适用','NA','1'],
            ['造口袋','9401','5574886','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','9401','5332294','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','9401','6656509','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','9403','4058396','附件','附件','附件','护肤','不适用','不适用','NA','1'],
            ['造口袋','9403','5332294','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','9501','4058396','附件','附件','附件','防漏','不适用','不适用','NA','1'],
            ['造口袋','9501','5332294','附件','附件','附件','防漏','不适用','不适用','NA','0'],
            ['造口袋','9501','5574886','附件','附件','附件','防漏','不适用','不适用','NA','0'],
            ['造口袋','9501','6656509','附件','附件','附件','防漏','不适用','不适用','NA','0'],
            ['造口袋','9601','4058396','附件','附件','附件','护肤','不适用','不适用','NA','1'],
            ['造口袋','9601','5332294','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','9601','6656509','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','9601','5574886','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','2101','4058396','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','2101','6330403','附件','附件','附件','护肤','不适用','不适用','NA','0'],
            ['造口袋','2101','2762871','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA','0'],
            ['造口袋','2101','5332294','B&P','肠道造口袋','一件式','一件式','清洗未识别','闭口','NA','0'],
            ['造口袋','1108','5332294','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','1108','5574886','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
            ['造口袋','4009','366843','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','1'],
            ['造口袋','4009','3851172','B&P','肠道造口袋','一件式','一件式','清洗未识别','开口','NA','0'],
        ]

        exc_bids = []
        kk, b1, b2, b3, b4, b5, b6, b7 = [], [], [], [], [], [], [], []
        for k1, k2, k3, a1, a2, a3, a4, a5, a6, a7, flag, in d:
            k3 = str(self.get_allbrand(int(k3))['alias_bid'] or k3)
            exc_bids.append(k3)

            kk.append('{}-{}-{}'.format(k1, k2, k3))
            b1.append(str(a1))
            b2.append(str(a2))
            b3.append(str(a3))
            b4.append(str(a4))
            b5.append(str(a5))
            b6.append(str(a6))
            b7.append(str(a7))

        sql = '''
            ALTER TABLE {} UPDATE `clean_props.value` = arrayMap((k,v)->(multiIf(
                k='分类1', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                k='分类2', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                k='分类3', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                k='分类4', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                k='平凸面', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                k='开闭口', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                k='产品线', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))), [{k}], [{}], v),
                v
            )), clean_props.name,clean_props.value)
            WHERE 1
        '''.format(
            tbl,
            ','.join(['\'{}\''.format(v) for v in b1]), ','.join(['\'{}\''.format(v) for v in b2]),
            ','.join(['\'{}\''.format(v) for v in b3]), ','.join(['\'{}\''.format(v) for v in b4]),
            ','.join(['\'{}\''.format(v) for v in b5]), ','.join(['\'{}\''.format(v) for v in b6]),
            ','.join(['\'{}\''.format(v) for v in b7]),
            k=','.join(['\'{}\''.format(v) for v in kk])
        )
        dba.execute(sql)

        while not self.cleaner.check_mutations_end(dba, tbl):
            time.sleep(5)

        kkk = kk
        kk, b0, b1, b2, b3, b4, b5, b6, b7 = [], [], [], [], [], [], [], [], []
        for k1, k2, a0, a1, a2, a3, a4, a5, a6, a7, flag, in d:
            if flag == '1':
                kk.append('{}-{}'.format(k1, k2))
                b0.append(str(a0))
                b1.append(str(a1))
                b2.append(str(a2))
                b3.append(str(a3))
                b4.append(str(a4))
                b5.append(str(a5))
                b6.append(str(a6))
                b7.append(str(a7))

        sql = '''
            ALTER TABLE {} UPDATE `clean_props.value` = arrayMap((k,v)->(multiIf(
                k='分类1', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='分类2', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='分类3', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='分类4', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='平凸面', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='开闭口', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                k='产品线', transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], v),
                v
            )), clean_props.name,clean_props.value),
            `alias_all_bid` = transform(CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')]), [{k}], [{}], `alias_all_bid`)
            WHERE CONCAT(`clean_props.value`[indexOf(`clean_props.name`,'子品类')],'-',`clean_props.value`[indexOf(`clean_props.name`,'型号')],'-',toString(dictGetOrDefault('all_brand', 'alias_bid', tuple(alias_all_bid), toUInt32(0)))) NOT IN ({})
        '''.format(
            tbl,
            ','.join(['\'{}\''.format(v) for v in b1]), ','.join(['\'{}\''.format(v) for v in b2]),
            ','.join(['\'{}\''.format(v) for v in b3]), ','.join(['\'{}\''.format(v) for v in b4]),
            ','.join(['\'{}\''.format(v) for v in b5]), ','.join(['\'{}\''.format(v) for v in b6]),
            ','.join(['\'{}\''.format(v) for v in b7]), ','.join(b0), ','.join(['\'{}\''.format(v) for v in kkk]),
            k=','.join(['\'{}\''.format(v) for v in kk])
        )
        dba.execute(sql)

        while not self.cleaner.check_mutations_end(dba, tbl):
            time.sleep(5)

        sql = '''
            ALTER TABLE {} UPDATE `clean_props.value` = arrayMap((k,v)->(if(
                k='产品线', dictGetOrDefault('all_brand', 'name', tuple(toUInt32(alias_all_bid)), 'other'),
                v
            )), clean_props.name,clean_props.value)
            WHERE `clean_props.value`[indexOf(`clean_props.name`, '产品线')] = 'NA'
        '''.format(tbl)
        dba.execute(sql)

        while not self.cleaner.check_mutations_end(dba, tbl):
            time.sleep(5)


    def brush_modify(self, v, bru_items):
        x1, x2, x3 = [], [], []
        for vv in v['split_pids']:
            if vv['sp3'] != '':
                x1.append(vv['sp3'])
                x2.append('{}({})'.format(vv['sp3'], vv['number']))
            x3.append(vv['sp12'])
        x1.sort()
        x1 = '|'.join(x1)
        x2.sort()
        x2 = '|'.join(x2)
        x3 = list(set(x3))
        x3.sort()
        x3 = '+'.join(x3)
        for vv in v['split_pids']:
            vv['sp15'] = x1
            vv['sp17'] = x2
            vv['sp18'] = str(len(v['split_pids']))
            vv['sp22'] = x3


# INSERT INTO artificial_new.`entity_90608_item`(
# tb_item_id,source,month,name,sku_name,sku_url,sid,shop_name,shop_type,cid,real_cid,region_str,brand,all_bid,alias_all_bid,super_bid,
# sub_brand,sub_brand_name,product,trade_prop_all,prop_all,avg_price,trade,num,sales,visible,p1,real_p1,clean_type,clean_flag,visible_check,
# spid1,spid2,spid3,spid4,spid5,spid6,spid7,spid8,spid9,spid10,spid11,pid,number,batch_id,flag,uid,check_uid,b_check_uid,tip,img,is_set
# )
# SELECT
# tb_item_id,source,month,name,'','',sid,shop_name,shop_type,cid,real_cid,region_str,brand,all_bid,alias_all_bid,super_bid,
# sub_brand,sub_brand_name,product,'','',avg_price,trade,num,sales,visible,p1,0,0,0,0,
# '','','',group_concat(sp4),'','','','','','','',pid,1,0,2,233,0,0,1,img,is_set
# FROM artificial_new.entity_90005_item_sp GROUP BY tb_item_id, source, `month`, p1;

# INSERT INTO product_lib.`product_90608`(
# name,product_name,full_name,tip,all_bid,alias_all_bid,brand_name,img,market_price,source,item_id,month,alias_pid,type,visible,flag,cid,category,sub_category,category_manual,
# sub_category_manual,trade_cid,uid,kid1,kid2,kid3,kid4,kid5,start_time,spid1,spid10,spid11,spid2,spid3,spid4,spid5,spid6,spid7,spid8,spid9
# )
# SELECT
# name,'','',1,alias_all_bid,alias_all_bid,'','',0,'',0,NULL,0,'',0,0,0,'','','','',0,0,'','','','','',NULL,'','','',sp2,sp3,'',sp5,sp6,sp7,sp8,''
# FROM artificial_new.entity_90005_manclean GROUP BY alias_all_bid, name;

# /bin/mysqldump -h 192.168.128.18 -ucleanAdmin -p6DiloKlm artificial_new entity_90608_item > /nas/90608.sql
# /bin/mysql -h 192.168.30.93 -ucleanAdmin -p6DiloKlm product_lib_ali < /nas/90608.sql
# /bin/mysqldump -h 192.168.128.18 -ucleanAdmin -p6DiloKlm product_lib product_90608 > /nas/p90608.sql
# /bin/mysql -h 192.168.30.93 -ucleanAdmin -p6DiloKlm product_lib_ali < /nas/p90608.sql