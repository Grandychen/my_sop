import sys
from os.path import abspath, join, dirname
sys.path.insert(0, join(abspath(dirname(__file__)), '../../'))
# sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='utf8')

import application as app
from models import common
from models.plugins import calculate_sp
import re
import collections

class main(calculate_sp.main):
    split_word = 'Ծ‸ Ծ'

    cate_name = [
        ['湿巾', '湿巾', '', re.compile(r'湿巾'), re.compile(r'非湿巾'), ''],
        ['棉柔巾', '棉柔巾', '', re.compile(r'云柔巾|云柔纸|棉柔巾|绵柔巾|乳霜巾|乳霜纸|柔润纸|柔润抽纸|柔抽纸|熊柔巾'), '', re.compile(r'非棉柔巾')],
        ['口水巾', '口水巾', '', re.compile(r'口水巾|方巾|吸汗巾|围嘴|三角巾'), '', ''],
        ['日常护理其他', '日常护理其他', '', re.compile(r'面巾|80抽|100抽|纸巾|抽纸|3层|4层|面纸|餐巾纸'), '', ''],
        ['婴童洁面', '婴童洁面', '', re.compile(r'洗面|洁面|洗颜|洁颜'), '', ''],
        ['护臀膏', '护臀膏', '', re.compile(r'护臀|屁屁'), '', ''],
        ['婴童乳液/面霜', '儿童面霜', re.compile(r'儿童|3岁+|3-|男童|女童'), re.compile(r'臻护霜|儿童霜|滋养霜|面霜|宝宝霜|面霜|护肤霜|小茶霜|保湿霜|精华乳|精华霜|云朵保湿霜|倍护霜|婴肤乐|太空凝露|坚果霜|舒润霜|水凝霜|多效霜|柔肤霜|嫩肤霜'), re.compile(r'婴儿|婴幼儿|0-|0岁|1岁+|2岁+|1-|2-|新生'), ''],
        ['婴童乳液/面霜', '婴儿面霜', '', re.compile(r'臻护霜|儿童霜|滋养霜|面霜|宝宝霜|面霜|护肤霜|小茶霜|保湿霜|精华乳|精华霜|云朵保湿霜|倍护霜|婴肤乐|太空凝露|坚果霜|舒润霜|水凝霜|多效霜|柔肤霜|嫩肤霜'), '', ''],
        ['婴童防晒', '晒后护理', '', re.compile(r'冰沙霜'), '', ''],
        ['婴童防晒', '晒后护理', re.compile(r'晒后'), re.compile(r'护理|修护|舒缓'), '', ''],
        ['婴童防晒', '防晒', '', re.compile(r'防晒|防嗮'), '', ''],
        ['婴童唇膏', '婴童唇膏', '', re.compile(r'唇膏|润唇膏'), '', ''],
        ['婴童爽肤水', '婴童爽肤水', '', re.compile(r'爽肤水|润肤水|爽身水|爽身露|爽肤喷雾|爽肤露|爽身喷雾|爽肤补水喷雾|桃叶水|桃子水|积雪草喷雾|液体爽身粉|液体痱子水'), '', ''],
        ['爽身粉', '爽身粉', '', re.compile(r'爽身粉|玉米粉|痱子粉|痱粉'), '', ''],
        ['护手霜', '护手霜', '', re.compile(r'手霜'), '', ''],
        ['唇周膏/霜/乳', '唇周膏/霜/乳', '', re.compile(r'唇周|口周|嘴周|口水膏|口水疹'), '', ''],
        ['婴童护肤油', '婴童护肤油', re.compile(r'抚触'), re.compile(r'油'), '', ''],
        ['婴童护肤油', '婴童护肤油', '', re.compile(r'护肤油|润肤油|按摩油|身体油'), '', ''],
        ['婴童面膜', '婴童面膜', '', re.compile(r'面膜'), '', re.compile(r'送面膜|赠面膜')],
        ['婴童润肤乳', '婴童润肤乳', '', re.compile(r'身体乳|润肤乳|润肤露|润肤霜|身体保湿露|保湿乳|精华乳|精华露|马油膏|马油棒'), '', ''],
        ['止痒凝露', '止痒凝露', re.compile(r'凝露|啫喱'), re.compile(r'止痒|舒缓|紫草'), '', ''],
        ['止痒凝露', '止痒凝露', '', re.compile(r'止痒啫喱|叮咬凝露'), '', ''],
        ['止痒液', '止痒液', '', re.compile(r'无比滴|tasuku|止痒液'), '', ''],
        ['止痒液', '止痒液', re.compile(r'止痒|舒缓|驱蚊|紫草|防蚊'), re.compile(r'走珠|滚珠'), '', ''],
        ['止痒膏', '止痒膏', re.compile(r'止痒|舒缓|驱蚊|紫草'), re.compile(r'膏|棒'), '', ''],
        ['止痒膏', '止痒膏', '', re.compile(r'蚊虫膏|防护膏|止痒棒|止痒膏|止痒修复膏|止痒修护膏|紫草膏|紫草舒缓膏|金盏花修复膏'), '', ''],
        ['止痒膏', '止痒膏', re.compile(r'紫草|蚊虫叮咬'), re.compile(r'膏|棒|走珠|滚珠'), '', ''],
        ['驱蚊手环', '驱蚊手环', '', re.compile(r'防护手环|驱蚊手环|精油手环|防叮手环|防蚊手环|啪啪款|啪啪手环|防蚊手圈|驱蚊手串|啪啪圈|防叮咬手环'), '', ''],
        ['蚊香液', '蚊香液', re.compile(r'蚊香液'), re.compile(r'电|器'), '', re.compile(r'神器')],
        ['蚊香片', '蚊香片', '', re.compile(r'蚊香片'), '', ''],
        ['驱蚊液', '驱蚊液', '', re.compile(r'驱蚊液|防护喷雾|驱蚊水|花露水|防叮水|防叮喷雾'), '', ''],
        ['驱蚊液', '驱蚊液', re.compile(r'驱蚊'), re.compile(r'喷雾'), '', ''],
        ['驱蚊贴', '驱蚊贴', re.compile(r'精油'), re.compile(r'贴'), '', ''],
        ['驱蚊贴', '驱蚊贴', '', re.compile(r'驱蚊贴|防蚊贴|精油贴|防叮贴|叮咬贴|止痒贴'), '', ''],
        ['牙膏', '牙膏', '', re.compile(r'牙膏'), '', ''],
        ['电动牙刷', '电动牙刷', '', re.compile(r'刷头'), '', ''],
        ['电动牙刷', '电动牙刷', re.compile(r'牙刷'), re.compile(r'电动|充电'), '', ''],
        ['牙刷', '牙刷', '', re.compile(r'牙刷|口腔刷|乳牙刷|舌苔刷|软毛|硬毛'), '', ''],
        ['儿童口腔喷雾', '儿童口腔喷雾', re.compile(r'口腔'), re.compile(r'口喷|护牙喷雾|口腔喷剂'), '', ''],
        ['儿童口腔喷雾', '儿童口腔喷雾', re.compile(r'口腔'), re.compile(r'喷雾|护齿喷雾'), '', re.compile(r'非喷雾')],
        ['儿童护牙素', '儿童护牙素', '', re.compile(r'护牙素'), '', re.compile(r'x')],
        ['儿童漱口水', '儿童漱口水', '', re.compile(r'漱口水'), '', ''],
        ['奶瓶清洗泡', '奶瓶清洗泡', re.compile(r'(奶瓶|果蔬|奶嘴).*(清洗|清洁)|(清洗|清洁).*(奶瓶|果蔬|奶嘴)'), re.compile(r'泡泡|泡沫|慕丝|慕斯'), '', ''],
        ['奶瓶清洗剂', '奶瓶清洗剂', '', re.compile(r'洗洁精'), '', ''],
        ['奶瓶清洗剂', '奶瓶清洗剂', re.compile(r'奶瓶|果蔬|奶嘴'), re.compile(r'清洗液|清洗剂|清洁剂|清洁液'), re.compile(r'泡泡|泡沫|慕丝|慕斯'), ''],
        ['洗衣液', '洗衣液', '', re.compile(r'皂露|洗衣液|洗衣泡泡|洗衣凝露|洗衣露'), '', ''],
        ['洗衣皂', '洗衣皂', re.compile(r'洗衣'), re.compile(r'肥皂|香皂'), '', ''],
        ['洗衣皂', '洗衣皂', '', re.compile(r'洗衣皂|抑菌皂|污渍皂'), '', ''],
        ['衣物柔顺/柔软剂', '衣物柔顺/柔软剂', '', re.compile(r'护理剂|柔顺剂'), '', ''],
        ['衣物柔顺/柔软剂', '衣物柔顺/柔软剂', re.compile(r'衣服|衣物'), re.compile(r'柔顺|柔软'), '', ''],
        ['洗衣粉', '洗衣粉', '', re.compile(r'洗衣粉|爆炸盐|清洁盐|皂粉|炸弹盐|泡泡盐|泡泡粉|漂白粉'), '', ''],
        ['婴童沐浴露', '洗发沐浴2合1', re.compile(r'洗护|洗浴|洗发水沐浴|沐浴露洗发水|沐浴|沐浴油|沐浴洗发'), re.compile(r'2合1|二合一|三合一|3合1'), '', re.compile(r'易冲洗沐')],
        ['婴童沐浴露', '洗发沐浴2合1', '', re.compile(r'洗发沐浴|洗沐|桃叶2合1'), '', ''],
        ['婴童洗发', '婴童洗发', '', re.compile(r'洗发'), '', re.compile(r'发膜')],
        ['婴童护发', '婴童护发', '', re.compile(r'护发素|护发喷雾|发膜'), '', ''],
        ['宝宝沐浴油/沐浴精油', '宝宝沐浴油/沐浴精油', '', re.compile(r'沐浴油|沐浴精油|泡澡油'), '', ''],
        ['宝宝沐浴盐', '宝宝沐浴盐', '', re.compile(r'沐浴盐|浴盐'), '', ''],
        ['婴童沐浴露', '沐浴露', '', re.compile(r'沐浴露|沐浴乳|沐浴液'), '', ''],
        ['金水', '金水', re.compile(r'泡澡'), re.compile(r'金露'), '', ''],
        ['金水', '金水', '', re.compile(r'金水'), '', ''],
        ['婴儿皂/儿童皂/香皂', '婴儿皂/儿童皂/香皂', re.compile(r'皂'), re.compile(r'羊奶|洁肤'), '', ''],
        ['婴儿皂/儿童皂/香皂', '婴儿皂/儿童皂/香皂', '', re.compile(r'奶皂|洁肤皂|沐浴皂|润肤皂'), '', ''],
        ['婴童洗手', '婴童洗手', '', re.compile(r'洗手|洁手'), '', ''],
        ['鼻腔护理', '鼻腔护理', re.compile(r'洗鼻'), re.compile(r'盐水|喷雾'), '', ''],
        ['鼻腔护理', '鼻腔护理', re.compile(r'盐水'), re.compile(r'喷雾'), '', ''],
        ['鼻腔护理', '鼻腔护理', '', re.compile(r'鼻喷|鼻腔护理喷雾|等渗|高渗'), '', ''],
        ['婴童洗衣其他', '婴童洗衣其他', '', re.compile(r'洗衣'), '', ''],
        ['驱蚊止痒其他', '驱蚊止痒其他', '', re.compile(r'诱蚊剂|驱蚊|防蚊扣|驱蚊香薰'), '', ''],
        ['婴童口腔护理其他', '婴童口腔护理其他', '', re.compile(r'口腔|牙齿'), '', ''],
        ['婴童护肤其他', '婴童护肤其他', '', re.compile(r'护肤'), '', ''],
        ['婴童清洁其他', '婴童清洁其他', '', re.compile(r'洗发|护发|沐浴|洗手'), '', ''],
        ['奶瓶清洗其他', '奶瓶清洗其他', re.compile(r'奶瓶'), re.compile(r'清洗'), '', ''],
    ]

    cate_p1 = [
        ['湿巾', '湿巾', '', re.compile(r'湿巾'), re.compile(r'非湿巾'), ''],
        ['棉柔巾', '棉柔巾', '', re.compile(r'云柔巾|云柔纸|棉柔巾|绵柔巾|乳霜巾|乳霜纸|柔润纸|柔润抽纸|柔抽纸|熊柔巾'), '', re.compile(r'非棉柔巾')],
        ['口水巾', '口水巾', '', re.compile(r'口水巾|方巾|吸汗巾|围嘴|三角巾'), '', ''],
        ['婴童洁面', '婴童洁面', '', re.compile(r'洗面|洁面|洗颜|洁颜'), '', ''],
        ['护臀膏', '护臀膏', '', re.compile(r'护臀|屁屁'), '', ''],
        ['婴童乳液/面霜', '儿童面霜', re.compile(r'儿童|3岁+'), re.compile(r'滋养霜|面霜|宝宝霜|面霜|护肤霜|小茶霜|保湿霜|精华乳|精华霜|云朵保湿霜|倍护霜|婴肤乐|太空凝露|坚果霜|舒润霜|水凝霜|多效霜|柔肤霜|嫩肤霜'), re.compile(r'婴儿|婴幼儿|0-|0岁|1岁+|2岁+|1-|2-|新生'), ''],
        ['婴童乳液/面霜', '婴儿面霜', re.compile(r'婴儿|婴幼儿|0-|0岁|1岁+|2岁+|1-|2-|新生'), re.compile(r'滋养霜|面霜|宝宝霜|面霜|护肤霜|小茶霜|保湿霜|精华乳|精华霜|云朵保湿霜|倍护霜|婴肤乐|太空凝露|坚果霜|舒润霜|水凝霜|多效霜|柔肤霜|嫩肤霜'), '', ''],
        ['婴童防晒', '晒后护理', re.compile(r'晒后'), re.compile(r'护理|修护|舒缓'), '', ''],
        ['婴童防晒', '晒后护理', '', re.compile(r'冰沙霜'), '', ''],
        ['婴童防晒', '防晒', '', re.compile(r'防晒|防嗮'), '', ''],
        ['婴童唇膏', '婴童唇膏', '', re.compile(r'唇膏|润唇膏|唇膏'), '', ''],
        ['婴童爽肤水', '婴童爽肤水', '', re.compile(r'爽肤水|润肤水|爽身水|爽身露|爽肤喷雾|爽肤露|爽身喷雾|爽肤补水喷雾|桃叶水|桃子水|积雪草喷雾|液体爽身粉|液体痱子水|桃叶喷喷乳'), '', ''],
        ['爽身粉', '爽身粉', '', re.compile(r'爽身粉|玉米粉|痱子粉|痱粉'), '', ''],
        ['护手霜', '护手霜', '', re.compile(r'手霜'), '', ''],
        ['唇周膏/霜/乳', '唇周膏/霜/乳', '', re.compile(r'唇周|口周|嘴周|口水膏|口水疹'), '', ''],
        ['婴童护肤油', '婴童护肤油', '', re.compile(r'护肤油|润肤油|按摩油|身体油|抚触油'), '', ''],
        ['婴童面膜', '婴童面膜', '', re.compile(r'面膜'), '', re.compile(r'送面膜|赠面膜')],
        ['婴童润肤乳', '婴童润肤乳', '', re.compile(r'身体乳|润肤乳|润肤露|润肤霜|身体保湿露'), '', ''],
        ['止痒凝露', '止痒凝露', re.compile(r'凝露|啫喱'), re.compile(r'止痒|舒缓|紫草'), '', ''],
        ['止痒凝露', '止痒凝露', '', re.compile(r'止痒啫喱|叮咬凝露'), '', ''],
        ['止痒液', '止痒液', '', re.compile(r'无比滴|走珠冰露|止痒液'), '', ''],
        ['止痒液', '止痒液', re.compile(r'止痒|舒缓|驱蚊|紫草|防蚊'), re.compile(r'走珠|滚珠'), '', ''],
        ['止痒膏', '止痒膏', re.compile(r'止痒|舒缓|驱蚊|紫草'), re.compile(r'膏|棒'), '', ''],
        ['止痒膏', '止痒膏', '', re.compile(r'防护膏|止痒棒|止痒膏|止痒修复膏|止痒修护膏|紫草膏|紫草舒缓膏|金盏花修复膏'), '', ''],
        ['驱蚊手环', '驱蚊手环', '', re.compile(r'驱蚊手环|精油手环|防叮手环|防蚊手环|啪啪款|啪啪手环|防蚊手圈|驱蚊手串|防叮咬手环'), '', ''],
        ['蚊香液', '蚊香液', re.compile(r'液'), re.compile(r'器'), '', re.compile(r'神器')],
        ['蚊香液', '蚊香液', '', re.compile(r'蚊香液|电加热'), '', ''],
        ['蚊香片', '蚊香片', '', re.compile(r'蚊香片'), '', ''],
        ['驱蚊液', '驱蚊液', re.compile(r'驱蚊'), re.compile(r'喷雾'), '', ''],
        ['驱蚊液', '驱蚊液', '', re.compile(r'驱蚊液|防护喷雾|驱蚊水|防叮喷雾'), '', ''],
        ['驱蚊贴', '驱蚊贴', re.compile(r'精油'), re.compile(r'贴'), '', ''],
        ['驱蚊贴', '驱蚊贴', '', re.compile(r'驱蚊贴|防蚊贴|防叮贴|叮咬贴|止痒贴'), '', ''],
        ['牙膏', '牙膏', '', re.compile(r'牙膏'), '', ''],
        ['电动牙刷', '电动牙刷', re.compile(r'电动'), re.compile(r'牙刷'), '', ''],
        ['电动牙刷', '电动牙刷', '', re.compile(r'刷头'), '', ''],
        ['牙刷', '牙刷', '', re.compile(r'牙刷|口腔刷|乳牙刷|舌苔刷|软毛|硬毛'), '', ''],
        ['儿童口腔喷雾', '儿童口腔喷雾', '', re.compile(r'口腔喷雾|护齿喷雾|口喷'), '', ''],
        ['儿童护牙素', '儿童护牙素', '', re.compile(r'护牙素'), '', ''],
        ['儿童漱口水', '儿童漱口水', '', re.compile(r'漱口水'), '', ''],
        ['奶瓶清洗泡', '奶瓶清洗泡', re.compile(r'(奶瓶|果蔬|奶嘴).*(清洗|清洁)|(清洗|清洁).*(奶瓶|果蔬|奶嘴)'), re.compile(r'泡泡|泡沫|慕丝|慕斯'), '', ''],
        ['奶瓶清洗剂', '奶瓶清洗剂', '', re.compile(r'洗洁精'), '', ''],
        ['奶瓶清洗剂', '奶瓶清洗剂', re.compile(r'奶瓶|果蔬|奶嘴'), re.compile(r'清洗液|清洗剂|清洁剂|清洁液'), re.compile(r'泡泡|泡沫|慕丝|慕斯'), ''],
        ['洗衣液', '洗衣液', '', re.compile(r'皂露|洗衣液|洗衣泡泡|洗衣凝露|洗衣露'), '', ''],
        ['洗衣皂', '洗衣皂', re.compile(r'洗衣'), re.compile(r'肥皂|香皂'), '', ''],
        ['洗衣皂', '洗衣皂', '', re.compile(r'洗衣皂|抑菌皂|污渍皂'), '', ''],
        ['衣物柔顺/柔软剂', '衣物柔顺/柔软剂', '', re.compile(r'护理剂'), '', ''],
        ['衣物柔顺/柔软剂', '衣物柔顺/柔软剂', re.compile(r'衣服|衣物'), re.compile(r'柔顺|柔软'), '', ''],
        ['洗衣粉', '洗衣粉', '', re.compile(r'洗衣粉|爆炸盐|清洁盐|皂粉|炸弹盐|漂白粉'), '', ''],
        ['婴童沐浴露', '洗发沐浴2合1', re.compile(r'洗护|洗浴|洗发水沐浴|沐浴露洗发水|沐浴|沐浴油|沐浴洗发'), re.compile(r'2合1|二合一|三合一|3合1'), '', re.compile(r'易冲洗沐')],
        ['婴童沐浴露', '洗发沐浴2合1', '', re.compile(r'洗发沐浴|洗沐|桃叶2合1'), '', ''],
        ['婴童洗发', '婴童洗发', '', re.compile(r'洗发'), '', re.compile(r'发膜')],
        ['婴童护发', '婴童护发', '', re.compile(r'护发素|护发喷雾|发膜'), '', ''],
        ['宝宝沐浴油/沐浴精油', '宝宝沐浴油/沐浴精油', '', re.compile(r'沐浴油|沐浴精油|泡澡油'), '', ''],
        ['宝宝沐浴盐', '宝宝沐浴盐', '', re.compile(r'沐浴盐|浴盐'), '', ''],
        ['婴童沐浴露', '沐浴露', '', re.compile(r'沐浴露|沐浴乳|沐浴液'), '', ''],
        ['金水', '金水', '', re.compile(r'金水|金露'), '', ''],
        ['婴儿皂/儿童皂/香皂', '婴儿皂/儿童皂/香皂', re.compile(r'羊奶'), re.compile(r'皂'), '', ''],
        ['婴儿皂/儿童皂/香皂', '婴儿皂/儿童皂/香皂', '', re.compile(r'香皂|奶皂|洁肤皂|沐浴皂|润肤皂|抑螨皂'), '', ''],
        ['婴童洗手', '婴童洗手', '', re.compile(r'洗手|洁手'), '', ''],
        ['鼻腔护理', '鼻腔护理', re.compile(r'洗鼻'), re.compile(r'盐水|喷雾'), '', ''],
        ['鼻腔护理', '鼻腔护理', re.compile(r'盐水'), re.compile(r'喷雾'), '', ''],
        ['鼻腔护理', '鼻腔护理', '', re.compile(r'鼻喷|鼻腔护理喷雾|等渗|高渗'), '', ''],
    ]

    cid_dict = {
        50014254: '婴童清洁其他',
        50014259: '婴童清洁其他',
        121368017: '婴童清洁其他',
        121426020: '婴童清洁其他',
        202001201: '婴童清洁其他',
        202003801: '婴童清洁其他',
        50008708: '奶瓶清洗其他',
        50012467: '婴童洗衣其他',
        50012468: '婴童洗衣其他',
        50012469: '婴童洗衣其他',
        50014726: '婴童洗衣其他',
        50014741: '婴童清洁其他',
        50236004: '婴童鼻腔护理其他',
        121380017: '驱蚊止痒其他',
        121398016: '驱蚊止痒其他',
        121466021: '驱蚊止痒其他',
        121474020: '驱蚊止痒其他',
        122730002: '驱蚊止痒其他',
        122766001: '驱蚊止痒其他',
        122768001: '驱蚊止痒其他',
        122770001: '驱蚊止痒其他',
        50012546: '婴童日常护理其他',
        50012453: '婴童口腔护理其他',
        50012454: '婴童口腔护理其他',
        50014700: '婴童口腔护理其他',
        50234003: '婴童口腔护理其他',
        50234005: '婴童口腔护理其他',
        201164005: '婴童口腔护理其他',
        201863902: '婴童口腔护理其他',
        50014249: '婴童护肤其他',
        50014255: '婴童护肤其他',
        50014257: '婴童护肤其他',
        50014258: '婴童护肤其他',
        50014260: '婴童护肤其他',
        121412016: '婴童护肤其他',
        121478012: '婴童护肤其他',
        201138201: '婴童护肤其他',
        201168003: '婴童护肤其他',
        201169506: '婴童护肤其他',
        201785002: '婴童护肤其他',
        201798601: '婴童护肤其他',
        202002006: '婴童护肤其他',
        27072: '婴童护肤其他',
        27073: '婴童护肤其他',
        27074: '婴童护肤其他',
        27142: '婴童护肤其他',
        27301: '婴童护肤其他',
        27302: '婴童护肤其他',
        27332: '婴童护肤其他',
        27356: '婴童护肤其他',
        27382: '婴童护肤其他',
        34386: '婴童护肤其他',
        34387: '婴童护肤其他',
        34741: '婴童护肤其他',
        34742: '婴童护肤其他',
        34743: '婴童护肤其他',
        34744: '驱蚊止痒其他',
        26884: '婴童洗衣其他',
        26885: '婴童清洁其他',
        26886: '婴童洗衣其他',
        26887: '婴童洗衣其他',
        26888: '婴童洗衣其他',
        26889: '婴童鼻腔护理其他',
        26890: '奶瓶清洗其他',
        34384: '婴童洗衣其他',
        34735: '婴童洗衣其他',
        34736: '婴童清洁其他',
        34737: '婴童洗衣其他',
        34738: '婴童清洁其他',
        34739: '婴童洗衣其他',
        27075: '婴童清洁其他',
        27078: '婴童清洁其他',
        27160: '婴童清洁其他',
        27167: '婴童清洁其他',
        34746: '婴童清洁其他',
        37869: '婴童清洁其他',
        33017: '婴童日常护理其他',
        26963: '驱蚊止痒其他',
        27080: '驱蚊止痒其他',
        27081: '驱蚊止痒其他',
        27082: '驱蚊止痒其他',
        27083: '驱蚊止痒其他',
        27084: '驱蚊止痒其他',
        27085: '驱蚊止痒其他',
        27208: '驱蚊止痒其他',
        34732: '驱蚊止痒其他',
        26396: '婴童口腔护理其他',
        26411: '婴童口腔护理其他',
        26415: '婴童口腔护理其他',
        26420: '婴童口腔护理其他',
        26424: '婴童口腔护理其他',
        26425: '婴童口腔护理其他',
        34747: '婴童口腔护理其他',
        34748: '婴童口腔护理其他',
        34750: '婴童口腔护理其他',
        36879: '婴童口腔护理其他',
        38012: '婴童日常护理其他',
        31982: '婴童日常护理其他',
        20960: '婴童日常护理其他',
        1548: '婴童日常护理其他',
        21420: '婴童日常护理其他',
        1558: '奶瓶清洗其他',
        1560: '驱蚊止痒其他',
        1559: '婴童日常护理其他',
        1555: '婴童清洁其他',
        1557: '婴童洗衣其他',
        1556: '婴童护肤其他',
        13289: '婴童口腔护理其他',
        31401: '婴童日常护理其他',
        22491: '婴童日常护理其他',
        1859: '婴童洗衣其他',
        1861: '婴童洗衣其他',
        1857: '婴童洗衣其他',
        5119: '婴童清洁其他',
        5118: '婴童清洁其他',
        18021: '婴童清洁其他',
        700: '婴童清洁其他',
        5126: '婴童清洁其他',
        108628: '婴童清洁其他',
        108629: '婴童清洁其他',
        5439: '婴童口腔护理其他',
        108679: '婴童口腔护理其他',
        9408: '婴童口腔护理其他',
        5441: '婴童口腔护理其他',
        5440: '婴童口腔护理其他',
        9409: '婴童口腔护理其他',
        5437: '婴童口腔护理其他',
        698: '婴童护肤其他',
        5128: '婴童护肤其他',
        18022: '婴童护肤其他',
        18023: '婴童护肤其他',
        5127: '婴童护肤其他',
        108632: '婴童护肤其他',
        5124: '婴童护肤其他',
        108630: '婴童护肤其他',
        5125: '婴童护肤其他',
        9178: '日常护理其他',
        702: '驱蚊止痒其他',
        5432: '驱蚊止痒其他',
        5434: '驱蚊止痒其他',
        5435: '驱蚊止痒其他',
        108661: '驱蚊止痒其他',
        5430: '驱蚊止痒其他',
        108663: '驱蚊止痒其他',
        1868: '奶瓶清洗其他',
        5413: '奶瓶清洗其他',
        2440: '婴童洗衣其他',
        13115: '婴童洗衣其他',
        13143: '婴童清洁其他',
        13141: '婴童清洁其他',
        13142: '婴童清洁其他',
        13140: '婴童清洁其他',
        2886: '婴童清洁其他',
        13135: '婴童口腔护理其他',
        13136: '婴童口腔护理其他',
        13138: '婴童口腔护理其他',
        13134: '婴童口腔护理其他',
        13137: '婴童口腔护理其他',
        13133: '婴童口腔护理其他',
        2884: '婴童口腔护理其他',
        13099: '婴童护肤其他',
        13103: '婴童护肤其他',
        17415: '婴童护肤其他',
        17418: '婴童护肤其他',
        17419: '婴童护肤其他',
        17414: '婴童护肤其他',
        13102: '婴童护肤其他',
        13105: '婴童护肤其他',
        13098: '婴童护肤其他',
        13100: '婴童护肤其他',
        13101: '婴童护肤其他',
        2887: '日常护理其他',
        2641: '日常护理其他',
        2885: '日常护理其他',
        13111: '驱蚊止痒其他',
        13112: '驱蚊止痒其他',
        13108: '驱蚊止痒其他',
        13110: '驱蚊止痒其他',
        13109: '驱蚊止痒其他',
        13107: '驱蚊止痒其他',
        13113: '驱蚊止痒其他',
        2438: '驱蚊止痒其他',
        14865: '婴童洗衣其他',
        14866: '婴童洗衣其他',
        14867: '婴童洗衣其他',
        14869: '婴童洗衣其他',
        14810: '婴童清洁其他',
        14812: '婴童清洁其他',
        14816: '婴童清洁其他',
        14822: '婴童清洁其他',
        14824: '婴童清洁其他',
        14919: '婴童口腔护理其他',
        14920: '婴童口腔护理其他',
        14922: '婴童口腔护理其他',
        14924: '婴童口腔护理其他',
        14925: '婴童口腔护理其他',
        14807: '婴童护肤其他',
        14808: '婴童护肤其他',
        14809: '婴童护肤其他',
        20088: '婴童护肤其他',
        14813: '婴童护肤其他',
        14817: '婴童护肤其他',
        14818: '婴童护肤其他',
        20375: '日常护理其他',
        21377: '日常护理其他',
        14801: '日常护理其他',
        14871: '驱蚊止痒其他',
        14872: '驱蚊止痒其他',
        14873: '驱蚊止痒其他',
        14874: '驱蚊止痒其他',
        14875: '驱蚊止痒其他',
        14876: '驱蚊止痒其他',
        14877: '驱蚊止痒其他',
        14878: '驱蚊止痒其他',
        14868: '奶瓶清洗其他',
        313102: '婴童洗衣其他',
        313101: '婴童洗衣其他',
        313103: '婴童清洁其他',
        347517: '婴童清洁其他',
        503903: '婴童清洁其他',
        313093: '婴童清洁其他',
        503904: '婴童清洁其他',
        505262: '婴童清洁其他',
        313095: '婴童护肤其他',
        347508: '婴童护肤其他',
        347507: '婴童护肤其他',
        505266: '婴童护肤其他',
        505264: '婴童护肤其他',
        505265: '婴童护肤其他',
        505263: '婴童护肤其他',
        362004: '日常护理其他',
        347512: '驱蚊止痒其他',
        347520: '奶瓶清洗其他'
    }

    package_p1 = [
        ['套包', '', re.compile(r'套包|套装|套组|套盒|组合|套餐|件套|礼盒|\+|＋'), '', re.compile(r'SPF23\++|SPF30\++|SPF50\++|PA\++|spf32\++|月\++|岁\++|3\+1')],
        ['套包', re.compile(r'牙膏'), re.compile(r'牙刷'), '', ''],
    ]

    package_name = [
        ['套包', '', re.compile(r'套包|套装|套组|套盒|组合|\+|套餐|件套|礼盒|＋'), '', re.compile(r'SPF23\++|SPF30\++|SPF50\++|PA\++|spf32\++|月\++|岁\++|3\+1')],

    ]

    def judge_cate(self, judge_word, judge_rule):
        for info in judge_rule:
            three_cate, four_cate, and_word, or_word, not_word, ignore_word = list(info)

            if not_word != '' and re.findall(not_word, judge_word) != []:
                continue

            if ignore_word != '':
                judge_word = re.sub(ignore_word, '', judge_word)

            if and_word != '' and re.findall(and_word, judge_word) == []:
                continue

            if or_word != '' and re.findall(or_word, judge_word) != []:
                return three_cate, four_cate, info
        
        return None, None, None

    def judge_package(self, judge_word, judge_rule):
        for info in judge_rule:
            package, and_word, or_word, not_word, ignore_word = list(info)
            if not_word != '' and re.findall(not_word, judge_word) != '':
                continue

            if ignore_word != '':
                judge_word = re.sub(ignore_word, '', judge_word)

            if and_word != '' and re.findall(and_word, judge_word) == []:
                continue

            if or_word != '' and re.findall(or_word, judge_word) != []:
                return package, info
        
        return None, None

    def start(self, batch_now, read_data, other_info=None):
        self.batch_now = batch_now
        self.read_data = self.one_to_multi(read_data, other_info)
        self.result_dict = dict()

        for row in self.read_data:
            self.batch_now.print_log('{line}Printing Clean Process{line}'.format(line=self.batch_now.line))
            item_id, source, cid, all_bid, alias_all_bid, prop_all, trade_prop_all, f_map = self.get_row_props(row)
            clean_type, mp, sp, detail = self.process_row(item_id, source, cid, all_bid, alias_all_bid, prop_all, trade_prop_all, f_map)
            
            if sp[1] != '杂音子品类':
                judge_p1 = str(' '.join([value for value in trade_prop_all.values()]))
                judge_name = str(f_map['name'])
                for word in [judge_p1, judge_name]:
                    is_p1 = word == judge_p1

                    unit_list = ['盒','个','支','包']
                    for unit in unit_list:
                        word = word.replace(unit, '')
                    remove_give_away = re.compile(r'配送|送福利|买[一二三四五六七八九十\d]+送[一二三四五六七八九十\d]+|买[一二三四五六七八九十\d]+赠[一二三四五六七八九十\d]+|拍[一二三四五六七八九十\d]+送[一二三四五六七八九十\d]+|拍[一二三四五六七八九十\d]+赠[一二三四五六七八九十\d]+|买多赠多|多买多赠|买多送多|多买多送|拍多赠多|多拍多赠|拍多送多|多拍多送')
                    word = re.sub(remove_give_away, '', word)
                    self.batch_now.print_log(('交易属性' if is_p1 else '名字') + '去除掉排除词后的判断词为：', word)

                    remove_word = re.compile(r'(\+赠|\+送|赠|送)(.*?)(?:[ ,\.\?\!\~\-\_\ˉ\=\;\:\/\*\^\`\·\、\+]|$)')
                    word = re.sub(remove_word, '', word)
                    self.batch_now.print_log(('交易属性' if is_p1 else '名字') + '去除赠送后文本的判断词为：', word)
                    if is_p1:
                        judge_p1 = word
                    else:
                        judge_name = word


                self.batch_now.print_log('----------开始匹配子品类----------')
                three_cate, four_cate, match_info = self.judge_cate(judge_p1, self.cate_p1)
                p1_found_cate = four_cate != None
                if p1_found_cate:
                    self.batch_now.print_log('交易属性中匹配到了子品类:' + four_cate)
                    self.batch_now.print_log('匹配到的信息组为:' + str(match_info))
                
                name_found_cate = False
                if not p1_found_cate:
                    three_cate, four_cate, match_info = self.judge_cate(judge_name, self.cate_name)
                    name_found_cate = four_cate != None
                    if name_found_cate:
                        self.batch_now.print_log('交易属性中没有匹配，名字中匹配到了子品类:' + four_cate)
                        self.batch_now.print_log('匹配到的信息组为:' + str(match_info))
                

                if not (p1_found_cate or name_found_cate):
                    cate = self.cid_dict.get(cid, sp[1])
                    self.batch_now.print_log('交易属性和名字都没有匹配，用cid匹配子品类:' + cate)
                
                if four_cate != None:
                    sp[1] = four_cate
                else:
                    sp[1] = cate
                

                self.batch_now.print_log('----------开始匹配套包----------')
                package, match_info = self.judge_package(judge_p1, self.package_p1)
                p1_found_package = package != None
                if p1_found_package:
                    self.batch_now.print_log('交易属性中匹配到了套包')
                    self.batch_now.print_log('匹配到的信息组为:' + str(match_info))

                name_found_package = False
                if not p1_found_package:
                    package,match_info = self.judge_package(judge_name, self.package_name)
                    name_found_package = package != None
                    if name_found_package:
                        self.batch_now.print_log('名字中匹配到了套包')
                        self.batch_now.print_log('匹配到的信息组为:' + str(match_info))

                if p1_found_package or name_found_package:
                    sp[7] = '套包'
                else:
                    self.batch_now.print_log('名字和交易属性中都没匹配到套包')
            
            self.result_dict[item_id] = self.post_process_row(item_id, all_bid, alias_all_bid, clean_type, mp, sp, detail, f_map)
            # 抖音数据特殊处理
            self.result_dict[item_id]['all_bid_sp'] = self.process_dy(f_map['snum'], alias_all_bid, f_map, self.result_dict[item_id]['all_bid_sp'])
            self.batch_now.print_log('id =', item_id, self.result_dict[item_id])

        return self.result_dict