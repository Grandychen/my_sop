# Generated by Django 5.0.6 on 2024-09-13 14:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CleanBatch',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('eid', models.IntegerField(default=0)),
                ('sub_eids', models.CharField(blank=True, default='', max_length=256)),
                ('name', models.CharField(default='', max_length=45)),
                ('comments', models.CharField(blank=True, max_length=200, null=True)),
                ('batch_type', models.SmallIntegerField(default=1)),
                ('has_client', models.SmallIntegerField(default=0)),
                ('finish_status', models.SmallIntegerField(default=0, help_text='0 means not, 1 means finished.')),
                ('market_eid', models.IntegerField(default=0)),
                ('report_month', models.CharField(default='', max_length=50)),
                ('is_item_table_mysql', models.BooleanField(default=False)),
                ('use_all_table', models.BooleanField(default=True)),
                ('compress', models.CharField(choices=[('day', 'Day'), ('month', 'Month'), ('', 'None')], default='', max_length=5)),
                ('update_flag', models.BooleanField(default=True)),
                ('clean_sku', models.BooleanField(default=False)),
                ('last_id', models.IntegerField(default=0)),
                ('last_pid', models.IntegerField(default=0)),
                ('update_alias_bid', models.BooleanField(default=True)),
                ('period_start', models.IntegerField(default=0)),
                ('period_end', models.IntegerField(default=0)),
                ('status', models.CharField(blank=True, default='', max_length=100)),
                ('estatus', models.CharField(blank=True, default='', max_length=300)),
                ('sp1cid', models.TextField(blank=True, null=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('msg', models.CharField(default='', max_length=100)),
                ('batch_mention', models.TextField(blank=True)),
                ('createTime', models.IntegerField(default=0)),
                ('updateTime', models.DateTimeField(auto_now=True)),
                ('deleteFlag', models.IntegerField(default=0)),
                ('dy_status', models.BooleanField(default=False)),
                ('graph_sps', models.TextField(blank=True, null=True)),
                ('checked_clean_flag', models.IntegerField(default=0)),
                ('clean_import_time', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'db_table': 'clean_batch',
            },
        ),
        migrations.CreateModel(
            name='CleanBatchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eid', models.IntegerField()),
                ('type', models.CharField(default='', max_length=64)),
                ('tmptbl', models.CharField(default='', max_length=64)),
                ('clnver', models.IntegerField(default=0)),
                ('outver', models.CharField(default='', max_length=64)),
                ('status', models.CharField(default='', max_length=64)),
                ('task_id', models.IntegerField(default=0)),
                ('params', models.TextField(blank=True, null=True)),
                ('msg', models.TextField(blank=True, null=True)),
                ('warn', models.TextField(blank=True, null=True)),
                ('process', models.FloatField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('batch_id', models.ForeignKey(db_column='batch_id', on_delete=django.db.models.deletion.CASCADE, to='cleaning.cleanbatch')),
            ],
            options={
                'db_table': 'clean_batch_log',
                'ordering': ['-create_time'],
            },
        ),
    ]
